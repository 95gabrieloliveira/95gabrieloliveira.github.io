/* Alteração do Box Model*/
*, *::after, *::before {box-sizing: border-box;}

html {font-size: 14px;}

body {
    background-color: whitesmoke;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

        /* solução problema do rodapé 
        Etapa 1: Colocar o body em modo flex e definir altura minima usando viewport como referência */
    display: flex;
    flex-direction: column;
    min-height: 100vh;


}
 /* etape 2 fazer o conteudo (main)
 ocupar todo o espaço necessário para empurrar o rodapé para baixo */

main {flex: 1;}

img {max-width: 100%;}

/* Reset de elementos */
body, h1, h2, h3, p, figure {
margin: 0;
padding: 0;
} 

h1 {
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    font-size: 1.5rem;
    font-weight: bold;
}

a {text-decoration: none;}

h1 a {
    background-color: black;
    color: brown;
    border-radius: 5px;
    padding: 0.3rem 1rem;
}

header { 
    background-color: white;
    text-transform: uppercase;
    
   
    /* Deixar o cabeçalho fixo */
    position: sticky;
    top: 0;
    z-index: 1000;
    }
    /* Ajuste de profundidade (Eixo Z)
    Quanto maior,mais à frente fica */

    /* Regra para um elemento (no caso uma div) com a classe limitador E dentro do header
      Importante: o flex configurado aqui funcionará SOMENTE para a classe limitador aplicada na div dentro do header.
      Além disso ela também estará recebendo max-width e margin vindos da regra da classe */
    header .limitador {
        display:flex;
        justify-content: space-between;
        align-items: center;
        height: 10vh;
      }

  /* Regra para Qualquer elemento com a classe limitador */    
.limitador {
    max-width: 1100px;
    margin: auto;
    width:  95%;
}


/* Regras para o texto/link Menu */
nav h2 {
    text-align: right;
}
nav h2 a {
    color: black;
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;

}

nav h2 a:hover,
nav h2 a:focus,
.links-menu a:hover, /* Teclas visiveis */
.links-menu a:focus
{
    background-color: gainsboro;
}

.links-menu {
    list-style: none;
    padding: 0;
    margin: 0;
     /* esta propiedade será usada posteriomente para esconder a lista */
     display: none;

}

.links-menu a {
    color: black;
    font-weight: bold;
    display: flex;
    height: 50px;
    /* Não é possível usar essas propiedades sem o flex */
    justify-content: center;
    align-items: center;
    background-color: whitesmoke;
}

/* Esta regra somente irá funcionar quando as duas classes estiverem juntas. 
(links-menu e classe aberta).

OBS: esta regra só sera aplicada posteriormente com auxílio de prgramação JavaScript*/

.links-menu.aberto {
   /* Neste ponto,usamos o flex para voltar a exibir o menu (quando aberto) */
    display: flex;

    /* E fazemos com que os links apareçam verticalmente */
   flex-direction: column;

   /* Usamos position e coordenadas para garantir o posicionamento correto do menu quando aberto */
   position: absolute;
   right: 0;
   left: 0;
}

.destaque {

    background-image: url(../imagens/fundo-destaque.jpg);
    color: white;
    height: 90vh;

    background-size: cover;
    background-attachment: fixed;
    text-align: center;

    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    /* Alinha tudo (h2 e p) ao centro */
    align-content: center;
}

/* Sem esta definição de tamanho o flex-wrap não funciona */
.destaque h2, 
.destaque p {

    width: 100%;
} 

.destaque h2 {
    /* Fonte responsiva usando a função clamp (minimo, ideal, máximo) */
    font-size: clamp(2rem, 10vw, 7rem);

    /* Chamar e configurar a configuração */
    animation-name: aparecer;
    animation-duration: 3s;
    /*  Outros modelos de comandos
    animation-iteration-count: infinite;
    animation-direction: alternate-reverse;*/
}

.destaque p  {
    font-size: clamp(1.5rem, 3vw, 4rem);
    font-weight: bold;

    /* Sintaxe Completa */
  
    /* animation-name: aparecer;
    animation-duration: 3s;
    animation-delay: 1s;
    animation-fill-mode: backwards; */

    /* Sintaxe Abreviada */
    animation: aparecer 3s 2s backwards  
}


/* Etapa 1) Rega de animação */
@keyframes aparecer  {
    from /* Dê */ {
        opacity: 0;
        transform: translateY(-100vh);
    }  
    
    to /* Para */  {
        opacity: 1;
        transform: translateY(0);
    }  


}

.front-end,
.historia,
.localizacao { text-align: center; }

article h2 {padding: 1rem;}

article p {padding: 1rem 0;}

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
    background-size: cover;
}

.historia h2 {
    color: white;
    text-shadow: black 1px 1px 5px;
}

.historia iframe {
    width: 100%;
    max-width: 700px;
}

footer {
    background-color: black;
    color: white;
    height: 15vh;
    display: flex;
    font-weight: bold;
    justify-content: center;
    align-items: center;
    text-align: center;
}

/* Regras para os conteúdos das páginas, Produtos serviços e Contato */

.conteudo {
    background-color: white;
    padding: 0.7rem;
    border-radius: 7px;

}

.conteudo h2 {text-align: center;}

table, th, td {
    border: solid 2px black;
    border-collapse: collapse;
}

table  {
    width: 80%;
    margin: auto;
    max-width: 600px;
}

caption {
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.1rem;
    padding-bottom: 5px;
}

th {
    background-color: black;
    color: white;
    font-size: 1.1rem;
    padding: .5rem;
    }

    td {
        /* background-color: lightblue */
        font-size: 1.2rem;

    }
    
    /* Formatando os primeiros td's */
    td:last-child   {color: red;
        text-align: right;
        padding-right: 5px;
    }
    
    /* formatando os "segundo" td's */
    td:nth-child(2) {text-align: center;}

    /* even:par odd: impar */

    tr:nth-child(even) {background-color:white;}

    form {
        background-color: grey;
        width: 95%;
        margin: auto;
        padding: 1rem;
        border-radius: 10px;
       }

       /* Pseudo-classe :not()
       Permite criar exceções para determinadas regras.
       Abaixo, estamos pegando todos os inputs exceto os do tipo
       radio e checkbox     */

     input:not([type=radio]):not([type=checkbox]), select, textarea {
        border: none;
        padding: 1%;
        width: 100%;
        height: 40px;

     }

     textarea {height: auto;}

     button {
         background-color: white;
         color: black;
         border:grey;
         padding: 1rem;
         
     }

@media screen and (min-width: 530px) {
    nav {width: 70%;}
 nav h2 {display: none; }
 .links-menu {display: flex;}

 .links-menu li {width: 100%;}
}

@media screen and (min-width: 800px) {
    html {font-size: 18px;}
    header .limitador {height: 15vh;}
    .destaque{ height: 85vh;}
    
}